// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// RetryProcess is an autogenerated mock type for the RetryProcess type
type RetryProcess struct {
	mock.Mock
}

// AddRetryCount provides a mock function with given fields: key
func (_m *RetryProcess) AddRetryCount(key string) int {
	ret := _m.Called(key)

	var r0 int
	if rf, ok := ret.Get(0).(func(string) int); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// ClearRetryCount provides a mock function with given fields: string
func (_m *RetryProcess) ClearRetryCount(string string) {
	_m.Called(string)
}

// DelayProcessFollowBackOffTime provides a mock function with given fields: string
func (_m *RetryProcess) DelayProcessFollowBackOffTime(string string) {
	_m.Called(string)
}

// GetRetryCount provides a mock function with given fields: key
func (_m *RetryProcess) GetRetryCount(key string) int {
	ret := _m.Called(key)

	var r0 int
	if rf, ok := ret.Get(0).(func(string) int); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// IsMaximumRetry provides a mock function with given fields: key
func (_m *RetryProcess) IsMaximumRetry(key string) bool {
	ret := _m.Called(key)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
